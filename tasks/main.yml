---
# tasks file for tower
- name: check for necessary variables
  fail: msg="tower_pg_password has not been defined."
  when: tower_pg_password|default(False) == False

- name: check for necessary variables
  fail: msg="tower_admin_password has not been defined."
  when: tower_admin_password|default(False) == False

- name: check for necessary variables
  fail: msg="tower_rabbitmq_password has not been defined."
  when: tower_rabbitmq_password|default(False) == False

- name: install some useful packages 
  apt: pkg={{ item }} state=latest update_cache=yes cache_valid_time=86400
  with_items: tower_dependencies

- name: pip ansible install
  pip: name=ansible

- name: download Tower setup
  get_url: url=http://releases.ansible.com/ansible-tower/setup/ansible-tower-setup-{{ tower_version }}.tar.gz dest=/tmp/ force=yes sha256sum={{ tower_checksum }}

- name: extract Tower
  command: chdir=/tmp/ creates=/tmp/ansible-tower-setup-{{ tower_version }} tar zxvf ansible-tower-setup-{{ tower_version }}.tar.gz
  register: tower_extracted

- name: template the group_vars file
  template: src=tower_group_vars.j2 dest=/tmp/ansible-tower-setup-{{ tower_version }} owner=root group=root mode=0644

- name: run the Tower installer
  command: chdir=/tmp/ansible-tower-setup-{{ tower_version }} creates=/etc/awx/settings.py ./setup.sh
  when: tower_extracted|changed or tower_force_setup

- name: override ssl cert
  copy: src={{ tower_sslcert_file }} dest={{ tower_sslcert_location }} owner=root group=root mode=0644
  when: tower_sslcert_file is defined

- name: override ssl key
  copy: src={{ tower_sslkey_file }} dest={{ tower_sslkey_location }} owner=root group=root mode=0644
  when: tower_sslkey_file is defined
